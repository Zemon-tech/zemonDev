{
  "ragSystemImplementation": {
    "overview": {
      "name": "Knowledge Base RAG System",
      "description": "A Retrieval-Augmented Generation system for storing, indexing, and retrieving documents with semantic search capabilities",
      "technologies": {
        "vectorDatabase": "Upstash Vector",
        "embeddingModel": "Google Gemini text-embedding-004",
        "database": "MongoDB",
        "backend": "Node.js/Express",
        "frontend": "React/TypeScript"
      }
    },
    "dataModel": {
      "knowledgeBaseDocument": {
        "schema": {
          "title": "String (required, unique)",
          "content": "String (required) - Raw text content",
          "documentType": "String (enum: 'text', 'markdown', 'pdf', 'webpage', 'code_snippet', 'json')",
          "sourceUrl": "String (optional)",
          "category": "String (optional)",
          "tags": "Array of Strings (optional)",
          "metadata": "Map of key-value pairs (optional)",
          "vectorId": "String (unique, sparse) - ID in Upstash Vector",
          "isIndexed": "Boolean (default: false)",
          "lastIndexedAt": "Date",
          "createdAt": "Date (default: now)",
          "updatedAt": "Date (default: now)"
        },
        "description": "Stores document metadata and content in MongoDB"
      },
      "vectorEntries": {
        "structure": {
          "id": "String - Unique identifier (format: documentId_chunk_index)",
          "vector": "Number[] - Embedding array from Gemini",
          "metadata": {
            "text_content": "String - Chunk of original text",
            "source_document_id": "String - MongoDB document ID",
            "document_title": "String",
            "document_type": "String",
            "category": "String (optional)",
            "tags": "Array (optional)"
          }
        },
        "description": "Stored in Upstash Vector for semantic search"
      }
    },
    "backendChanges": {
      "newFiles": [
        {
          "path": "backend-admin/src/config/upstashVector.ts",
          "purpose": "Configures and exports Upstash Vector client and Gemini embedding functions",
          "exports": ["vectorClient", "generateEmbedding"]
        },
        {
          "path": "backend-admin/src/models/knowledgeBaseDocument.model.ts",
          "purpose": "MongoDB model for document storage",
          "exports": ["KnowledgeBaseDocument"]
        },
        {
          "path": "backend-admin/src/services/knowledgeBase.service.ts",
          "purpose": "Core business logic for document processing and vector operations",
          "exports": ["chunkText", "upsertDocumentVector", "deleteDocumentVectors"]
        },
        {
          "path": "backend-admin/src/controllers/knowledgeBase.controller.ts",
          "purpose": "API endpoint handlers for CRUD operations",
          "exports": ["createDocument", "getAllDocuments", "getDocumentById", "updateDocument", "deleteDocument"]
        },
        {
          "path": "backend-admin/src/api/knowledgeBase.routes.ts",
          "purpose": "Express router for knowledge base endpoints",
          "exports": ["knowledgeBaseRouter"]
        }
      ],
      "modifiedFiles": [
        {
          "path": "backend-admin/src/index.ts",
          "changes": "Added knowledgeBaseRouter to Express app"
        },
        {
          "path": "backend-admin/package.json",
          "changes": "Added dependencies: @upstash/vector, @google/generative-ai"
        }
      ],
      "apiEndpoints": [
        {
          "method": "POST",
          "path": "/api/admin/knowledge-base/documents",
          "purpose": "Create new document and index in vector database",
          "requestBody": {
            "title": "String (required)",
            "content": "String (required)",
            "documentType": "String (required)",
            "sourceUrl": "String (optional)",
            "category": "String (optional)",
            "tags": "Array (optional)",
            "metadata": "Object (optional)"
          },
          "response": {
            "success": "Created document object",
            "error": "Error message"
          }
        },
        {
          "method": "GET",
          "path": "/api/admin/knowledge-base/documents",
          "purpose": "List all documents with pagination",
          "queryParams": {
            "page": "Number (optional)",
            "limit": "Number (optional)"
          },
          "response": {
            "success": "Array of documents",
            "error": "Error message"
          }
        },
        {
          "method": "GET",
          "path": "/api/admin/knowledge-base/documents/:id",
          "purpose": "Get single document by ID",
          "response": {
            "success": "Document object",
            "error": "Error message"
          }
        },
        {
          "method": "PUT",
          "path": "/api/admin/knowledge-base/documents/:id",
          "purpose": "Update document and re-index in vector database",
          "requestBody": {
            "title": "String (optional)",
            "content": "String (optional)",
            "documentType": "String (optional)",
            "sourceUrl": "String (optional)",
            "category": "String (optional)",
            "tags": "Array (optional)",
            "metadata": "Object (optional)"
          },
          "response": {
            "success": "Updated document object",
            "error": "Error message"
          }
        },
        {
          "method": "DELETE",
          "path": "/api/admin/knowledge-base/documents/:id",
          "purpose": "Delete document and remove from vector database",
          "response": {
            "success": "Success message",
            "error": "Error message"
          }
        }
      ]
    },
    "frontendChanges": {
      "newFiles": [
        {
          "path": "frontend-admin/src/services/knowledgeBaseApi.ts",
          "purpose": "API client for knowledge base operations",
          "exports": [
            "createKnowledgeBaseDocument",
            "getKnowledgeBaseDocuments",
            "getKnowledgeBaseDocumentById",
            "updateKnowledgeBaseDocument",
            "deleteKnowledgeBaseDocument"
          ]
        },
        {
          "path": "frontend-admin/src/pages/KnowledgeBasePage.tsx",
          "purpose": "Main page for knowledge base management",
          "features": [
            "Document listing table",
            "Add/Edit document functionality",
            "Delete confirmation"
          ]
        },
        {
          "path": "frontend-admin/src/components/DocumentModal.tsx",
          "purpose": "Modal for adding/editing documents",
          "features": [
            "Form for document details",
            "Document type selection",
            "Tag management",
            "Content input (text/markdown/file upload)"
          ]
        }
      ],
      "modifiedFiles": [
        {
          "path": "frontend-admin/src/components/layout/Sidebar.tsx",
          "changes": "Added Knowledge Base navigation link with icon"
        },
        {
          "path": "frontend-admin/src/App.tsx",
          "changes": "Added route for KnowledgeBasePage"
        }
      ]
    },
    "dataFlow": {
      "documentCreation": [
        "User submits document form on frontend",
        "Frontend sends data to POST /api/admin/knowledge-base/documents",
        "Backend saves document in MongoDB",
        "knowledgeBase.service chunks text content",
        "Each chunk gets embedded via Gemini AI",
        "Embeddings are stored in Upstash Vector with metadata",
        "MongoDB document updated with indexing status"
      ],
      "documentRetrieval": [
        "Frontend requests documents list",
        "Backend queries MongoDB for documents",
        "Returns paginated results with indexing status"
      ],
      "documentUpdate": [
        "User edits document on frontend",
        "Frontend sends data to PUT endpoint",
        "Backend updates MongoDB document",
        "Old vectors deleted from Upstash",
        "New content chunked and embedded",
        "New vectors stored in Upstash",
        "MongoDB document updated with new indexing status"
      ],
      "documentDeletion": [
        "User confirms deletion on frontend",
        "Frontend calls DELETE endpoint",
        "Backend deletes vectors from Upstash",
        "Document removed from MongoDB"
      ]
    },
    "environmentVariables": {
      "backend": [
        {
          "name": "UPSTASH_VECTOR_REST_URL",
          "description": "Upstash Vector database REST endpoint URL"
        },
        {
          "name": "UPSTASH_VECTOR_REST_TOKEN",
          "description": "Authentication token for Upstash Vector"
        },
        {
          "name": "GEMINI_EMBEDDING_API_KEY",
          "description": "Google Gemini API key for text embeddings"
        }
      ]
    },
    "knownLimitations": [
      "PDF parsing temporarily disabled due to DOM Matrix compatibility issues",
      "No batch processing for large document sets",
      "Limited metadata filtering in current implementation",
      "No direct semantic search UI in admin panel (only document management)"
    ],
    "futureEnhancements": [
      "Re-enable PDF parsing with proper server-side implementation",
      "Add batch document import functionality",
      "Implement direct semantic search testing in admin panel",
      "Add document version history",
      "Implement more advanced chunking strategies",
      "Add support for image embedding and search"
    ]
  }
} 